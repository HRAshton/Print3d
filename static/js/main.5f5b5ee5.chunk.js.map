{"version":3,"sources":["panels/Home.js","App.js","index.js","img/Tetrahedron.svg","img/Parallelepiped.svg","img/Sphere.svg","img/Cube.svg","img/Pyramid.svg","img/Cone.svg"],"names":["sizes","Home","_ref","id","selectedFigure","lenA","lenB","lenC","lenD","cost","volume","selectFigure","selectedPlastic","changeLen","changePlastic","plasticTypes","react_default","a","createElement","es6","title","onChange","x","target","value","map","index","key","Name","Cost","size","stratched","level","onClick","style","display","flexDirection","src","Cube","Pyramid","Sphere","Cone","Tetrahedron","Parallelepiped","fontSize","width","type","parseFloat","replace","textAlign","PlasticCosts","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getVolume","state","Math","pow","PI","sqrt","getCost","plastic","number","ceil","activePanel","selectedPlasticType","_this2","src_panels_Home","len","val","setState","React","Component","connect","send","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5f5b5ee5.chunk.js","sourcesContent":["import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {Panel, Button, Group, Div, PanelHeader, InfoRow, Select, SelectMimicry} from '@vkontakte/vkui';\nimport Tetrahedron from \"../img/Tetrahedron.svg\"\nimport Parallelepiped from \"../img/Parallelepiped.svg\"\nimport Sphere from \"../img/Sphere.svg\"\nimport Cube from \"../img/Cube.svg\"\nimport Pyramid from \"../img/Pyramid.svg\"\nimport Cone from \"../img/Cone.svg\"\nimport './Home.css';\n\nconst sizes = [\n    [\"Длина стороны\"],\n    [\"Высота\", \"Длина стороны\"],\n    [\"Радиус\"],\n    [\"Высота\", \"Радиус основания\"],\n    [\"Длина стороны А\", \"Длина стороны B\", \"Длина стороны C\", \"Длина стороны D\"],\n    [\"Длина\", \"Ширина\", \"Высота\"],\n];\n\nconst Home = ({id, selectedFigure, lenA, lenB, lenC, lenD, volume, cost, selectFigure, selectedPlastic, changeLen, changePlastic, plasticTypes}) => {\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Калькулятор стоимости печати</PanelHeader>\n\n            <Group title=\"Пластик\">\n                <Div id={\"plastic\"}>\n                    <Select onChange={(x) => changePlastic(x.target.value)} value={selectedPlastic}>\n                        {\n                            plasticTypes.map((x, index) => <option key={x.Name}\n                                                                   value={index}>{x.Name} - {x.Cost} &#8381;/г</option>)\n                        }\n                    </Select>\n                </Div>\n            </Group>\n\n            <Group title=\"Выберите фигуру\">\n                <Div id={\"figs\"}>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 0 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(0)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Cube}/>\n                            Куб\n                        </Div>\n                    </Button>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 1 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(1)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Pyramid}/>\n                            Пирамида\n                        </Div>\n                    </Button>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 2 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(2)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Sphere}/>\n                            Сфера\n                        </Div>\n                    </Button>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 3 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(3)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Cone}/>\n                            Конус\n                        </Div>\n                    </Button>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 4 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(4)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Tetrahedron}/>\n                            Тетраэдр\n                        </Div>\n                    </Button>\n                    <Button size=\"l\" stratched={\"true\"} level={selectedFigure === 5 ? \"secondary\" : \"tertiary\"}\n                            onClick={() => selectFigure(5)}>\n                        <Div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <img src={Parallelepiped}/>\n                            <span>Параллеле-ппипед</span>\n                        </Div>\n                    </Button>\n                </Div>\n            </Group>\n\n            <Group title={\"Размеры\"} style={{fontSize: \"x-large\"}} id={\"sizes\"}>\n                {\n                    !!sizes[selectedFigure][0] &&\n                    <Div style={{width: \"100%\", display: \"inline-flex\"}}>\n                        <label>{sizes[selectedFigure][0]}:</label>\n                        <input type={\"number\"} value={lenA} onChange={(x) =>\n                            changeLen(0, parseFloat(x.target.value.replace(\",\", \".\")))}/>\n                    </Div>\n                }\n                {\n                    !!sizes[selectedFigure][1] &&\n                    <Div style={{width: \"100%\", display: \"inline-flex\"}}>\n                        <label>{sizes[selectedFigure][1]}:</label>\n                        <input type={\"number\"} value={lenB} onChange={(x) =>\n                            changeLen(1, parseFloat(x.target.value.replace(\",\", \".\")))}/>\n                    </Div>\n                }\n                {\n                    !!sizes[selectedFigure][2] &&\n                    <Div style={{width: \"100%\", display: \"inline-flex\"}}>\n                        <label>{sizes[selectedFigure][2]}:</label>\n                        <input type={\"number\"} value={lenC} onChange={(x) =>\n                            changeLen(2, parseFloat(x.target.value.replace(\",\", \".\")))}/>\n                    </Div>\n                }\n                {\n                    !!sizes[selectedFigure][3] &&\n                    <Div style={{width: \"100%\", display: \"inline-flex\"}}>\n                        <label>{sizes[selectedFigure][3]}:</label>\n                        <input type={\"number\"} value={lenD} onChange={(x) =>\n                            changeLen(3, parseFloat(x.target.value.replace(\",\", \".\")))}/>\n                    </Div>\n                }\n            </Group>\n\n            <Group>\n                <Div>\n                    <InfoRow title={\"Сумма\"} style={{textAlign: \"center\"}}>\n                        {cost} руб.\n                    </InfoRow>\n                </Div>\n            </Group>\n        </Panel>\n    );\n};\n\nHome.propTypes = {\n    selectedFigure: PropTypes.any,\n    selectedPlastic: PropTypes.any,\n\n    lenA: PropTypes.number,\n    lenB: PropTypes.number,\n    lenC: PropTypes.number,\n    lenD: PropTypes.number,\n    volume: PropTypes.number,\n\n    selectFigure: PropTypes.func,\n    changeLen: PropTypes.func,\n    changePlastic: PropTypes.func,\n\n    plasticTypes: PropTypes.array,\n};\n\nexport default Home;\n","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst PlasticCosts = [\n\t{ Name: \"ABS\", Cost: 2.0 },\n\t{ Name: \"PLA\", Cost: 3.4 },\n];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\n\t\t\tselectedPlasticType: 1,\n\t\t\tselectedFigure: 0,\n\t\t\tlenA: 0,\n\t\t\tlenB: 0,\n\t\t\tlenC: 0,\n\t\t\tlenD: 0,\n\t\t};\n\t}\n\n\tgetVolume = () => {\n\t\tif (this.state.selectedFigure === 0) {\n\t\t\treturn Math.pow(this.state.lenA, 3);\n\t\t}\n\t\tif (this.state.selectedFigure === 1) {\n\t\t\treturn 1/3 * this.state.lenA * this.state.lenB * this.state.lenB;\n\t\t}\n\t\tif (this.state.selectedFigure === 2) {\n\t\t\treturn 4/3 * Math.PI * Math.pow(this.state.lenA, 3);\n\t\t}\n\t\tif (this.state.selectedFigure === 3) {\n\t\t\treturn 1/3 * Math.PI * this.state.lenA * Math.pow(this.state.lenB, 2);\n\t\t}\n\t\tif (this.state.selectedFigure === 4) {\n\t\t\treturn 1/3 * this.state.lenA * this.state.lenB * this.state.lenC * Math.sqrt(this.state.lenD);\n\t\t}\n\t\tif (this.state.selectedFigure === 5) {\n\t\t\treturn this.state.lenA * this.state.lenB * this.state.lenC;\n\t\t}\n\t};\n\n\tgetCost = (plastic, volume) => {\n\t\tlet number = Math.ceil(PlasticCosts[plastic].Cost * volume);\n\t\treturn number === 0 ? 0 : number + 100;\n\t};\n\n\trender() {\n\t\tlet volume = this.getVolume();\n\t\tlet cost = this.getCost(this.state.selectedPlasticType, volume);\n\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\"\n\t\t\t\t\t  changeLen={(len, val) => {\n\t\t\t\t\t  \tswitch (len) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tthis.setState({lenA: parseFloat(val)});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tthis.setState({lenB: parseFloat(val)});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tthis.setState({lenC: parseFloat(val)});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tthis.setState({lenD: parseFloat(val)});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t  }}\n\t\t\t\t\t  cost={cost}\n\t\t\t\t\t  lenA={this.state.lenA} lenB={this.state.lenB}\n\t\t\t\t\t  lenC={this.state.lenC} lenD={this.state.lenD}\n\t\t\t\t\t  selectedFigure={this.state.selectedFigure}\n\t\t\t\t\t  selectedPlastic={this.state.selectedPlasticType}\n\t\t\t\t\t  plasticTypes={PlasticCosts}\n\t\t\t\t\t  selectFigure={(x) => {this.setState({ selectedFigure: x })}}\n\t\t\t\t\t  volume={volume}\n\t\t\t\t\t  changePlastic={(x) => this.setState({selectedPlasticType: x})}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/Tetrahedron.2ae83c8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Parallelepiped.5eee3027.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sphere.c41d3b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cube.f357259d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pyramid.32505fa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cone.bc612901.svg\";"],"sourceRoot":""}